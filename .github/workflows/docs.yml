name: Deploy Documentation

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags (e.g., v2.1.0)
    branches:
      - 'feat/comprehensive-n8n-improvements'  # Test branch for comprehensive n8n improvements
    paths:
      - '.github/workflows/docs.yml'
      - 'docs/**'
      - 'mkdocs.yml'
      - 'docs-requirements.txt'
      - 'typedoc.json'
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for git info

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install Node.js dependencies
        run: |
          echo "Current directory: $(pwd)"
          echo "Checking pnpm workspace configuration:"
          cat pnpm-workspace.yaml
          echo "Installing dependencies..."
          pnpm install --no-frozen-lockfile

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs and dependencies
        run: |
          pip install -r docs-requirements.txt

      - name: Generate TypeScript API documentation
        run: |
          npm run docs:generate
          echo "TypeDoc API documentation generated"

      - name: Build MkDocs site
        run: |
          mkdocs build
          echo "MkDocs site built successfully (warnings allowed for autorefs issues)"

      - name: List generated files
        run: |
          echo "Generated documentation structure:"
          find site -type f -name "*.html" | head -20
          echo "..."
          echo "Total HTML files: $(find site -name "*.html" | wc -l)"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment complete
        run: |
          echo "Documentation deployed successfully!"
          echo "Visit: ${{ steps.deployment.outputs.page_url }}"
